name: Release

on:
  push:
    tags: ["v*"]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy-pypi:
    name: Publish wheels to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: [linux, windows, macos]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing dist/*

  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install pandoc
        run: sudo apt-get install -y pandoc
      - name: Install python dependencies
        run: |
          pip install sphinx sphinx-bootstrap-theme nbsphinx ipython pygments
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --out dist
      - name: Install module
        run: |
          pip install feos --no-index --find-links dist --force-reinstall
      - name: Build documentation
        run: sphinx-build docs/ public/ -b html
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: public

  release-documentation:
    needs: [build-documentation]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: documentation
          path: public
      - name: Deploy documentation to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  release-crates-io:
    name: Release crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CRATES_IO_TOKEN }}