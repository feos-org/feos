name: Release

on:
  push:
    tags: ["v*"]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Build Wheels
        uses: PyO3/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --profile release-lto --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-x86_64
          path: dist

  macos-x86_64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          architecture: x64
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --profile release-lto --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-macos-x86_64
          path: dist
  macos-aarch64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          architecture: arm64
      - name: Build wheels - aarch64
        uses: PyO3/maturin-action@v1
        with:
          target: aarch64
          args: --profile release-lto-thin --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-aarch64-apple-darwin
          path: dist
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --profile release-lto --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.target }}
          path: dist

  deploy-pypi:
    name: Publish wheels to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: [linux, windows, macos-x86_64, macos-aarch64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: wheels
          merge-multiple: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing wheels/*

  release-crates-io:
    name: Release crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
